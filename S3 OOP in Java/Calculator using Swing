import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.lang.String;
import java.lang.Math;
public class app extends JFrame implements ActionListener
    {

        String operator,v1,v2;
        boolean flag=false;
        JFrame jf;
        JTextField t;
        double result;
        JButton b0,b1,b2,b3,b4,b5,b6,b7,b8,b9;
        JButton percentage,add, subtract, multiply, divide, decimal, equalSign,clear,factorial,power;

        app()
        {
            operator=v1=v2="";
            jf=new JFrame("CALCULATOR");
            jf.setSize(250,250);
            GridBagLayout layout = new GridBagLayout();
            GridBagConstraints gbc = new GridBagConstraints();
            jf.setLayout(layout);
            jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            t=new JTextField(10);

            b0= new JButton("0");
            b1= new JButton("1");
            b2= new JButton("2");
            b3= new JButton("3");
            b4= new JButton("4");
            b5= new JButton("5");
            b6= new JButton("6");
            b7= new JButton("7");
            b8= new JButton("8");
            b9= new JButton("9");
            add = new JButton("+");
            subtract = new JButton("-");
            multiply = new JButton("*");
            divide = new JButton("/");
            decimal = new JButton(".");
            equalSign = new JButton("=");
            clear= new JButton("C");
            factorial = new JButton("!");
            power = new JButton("^");
            percentage = new JButton("%");

            b0.addActionListener(this);
            b1.addActionListener(this);
            b2.addActionListener(this);
            b3.addActionListener(this);
            b4.addActionListener(this);
            b5.addActionListener(this);
            b6.addActionListener(this);
            b7.addActionListener(this);
            b8.addActionListener(this);
            b9.addActionListener(this);
            add.addActionListener(this);
            subtract.addActionListener(this);
            multiply.addActionListener(this);
            divide.addActionListener(this);
            equalSign.addActionListener(this);
            decimal.addActionListener(this);
            percentage.addActionListener(this);
            factorial.addActionListener(this);
            power.addActionListener(this);
            clear.addActionListener(this);

            gbc.fill = GridBagConstraints.HORIZONTAL;
            gbc.gridwidth = 5;

            gbc.gridx=0; gbc.gridy=0; jf.add(t, gbc);
            gbc.gridwidth = 5;  //width of txtbx

            //gbc.gridx=3; gbc.gridy=0; jf.add(equals, gbc);
            gbc.gridwidth = 1;

            //Row 1 Buttons
            gbc.gridx=0; gbc.gridy=1; jf.add(clear, gbc);
            gbc.gridx=1; gbc.gridy=1; jf.add(divide, gbc);
            gbc.gridx=2; gbc.gridy=1; jf.add(multiply, gbc);
            gbc.gridx=3; gbc.gridy=1; jf.add(subtract, gbc);

            //Row 2 Buttons
            gbc.gridx=0; gbc.gridy=2; jf.add(b7, gbc);
            gbc.gridx=1; gbc.gridy=2; jf.add(b8, gbc);
            gbc.gridx=2; gbc.gridy=2; jf.add(b9, gbc);
            gbc.gridx=3; gbc.gridy=2; jf.add(add, gbc);

            //Row 3 Buttons
            gbc.gridx=0; gbc.gridy=3; jf.add(b4, gbc);
            gbc.gridx=1; gbc.gridy=3; jf.add(b5, gbc);
            gbc.gridx=2; gbc.gridy=3; jf.add(b6, gbc);
            gbc.gridx=3; gbc.gridy=3; jf.add(factorial, gbc);

            //Row 4 Buttons
            gbc.gridx=0; gbc.gridy=4; jf.add(b1, gbc);
            gbc.gridx=1; gbc.gridy=4; jf.add(b2, gbc);
            gbc.gridx=2; gbc.gridy=4; jf.add(b3, gbc);
            gbc.gridx=3; gbc.gridy=4; jf.add(power, gbc);

            //Row 5 Buttons
            gbc.gridx=0; gbc.gridy=5; jf.add(percentage, gbc);
            gbc.gridx=1; gbc.gridy=5; jf.add(b0, gbc);
            gbc.gridx=2; gbc.gridy=5; jf.add(decimal, gbc);
            gbc.gridx=3; gbc.gridy=5; jf.add(equalSign, gbc);

            jf.setVisible(true);

        }
        public void actionPerformed(ActionEvent e)
        {
            try {
                String temp = e.getActionCommand();
                if(temp == "+" || temp == "-" || temp == "*" || temp == "/" || temp=="%" || temp=="!" || temp=="^")
                {
                    operator = temp;
                    flag = true;
                    t.setText(v1 + " " + operator);
                }
                else if(temp == "=")
                {
                    switch(operator)
                    {
                        case "+":
                            result = Double.parseDouble(v1)+Double.parseDouble(v2);
                            t.setText(v1 + " " + operator + " "+ v2+" "+"="+" "+result);
                            break;
                        case "-":
                            result = Double.parseDouble(v1)-Double.parseDouble(v2);
                            t.setText(v1 + " " + operator + " "+ v2+" "+"="+" "+result);
                            break;
                        case "*":
                            result = Double.parseDouble(v1)*Double.parseDouble(v2);
                            t.setText(v1 + " " + operator + " "+ v2+" "+"="+" "+result);
                            break;
                        case "/":
                            result = Double.parseDouble(v1)/Double.parseDouble(v2);
                            t.setText(v1 + " " + operator + " "+ v2+" "+"="+" "+result);
                            break;
                        case "%":
                            result=Double.parseDouble(v1)/100;
                            t.setText(v1+" "+operator+" "+"= "+result);
                            break;
                        case "!":
                            result=Double.parseDouble(v1);
                            double answer=1;
                            for(int i=1;i<=result;i++){
                                answer=answer*i;
                            }
                            t.setText(v1+" "+operator+" "+"= "+answer);
                            break;
                        case "^":
                            result=Math.pow(Double.parseDouble(v1),Double.parseDouble(v2));
                            t.setText(v1+" "+operator+" "+v2+"= "+result);
                            break;
                    }
                }
                else if(temp == "C")
                {
                    v1=v2="";
                    flag = false;
                    t.setText(" ");
                }
                else {
                    if(flag == false) {
                        v1 = v1+temp;
                        t.setText(v1 +" ");
                    }

                    else if((temp.charAt(0) >= '0' && temp.charAt(0)<= '9')|| temp== "."){
                        if (!operator.equals(""))
                            v2 = v2 +temp;
                        else
                            v1 = v1+temp;
                        t.setText(v1 + " " + operator + " "+ v2);
                    }
                }

            }
            catch(NumberFormatException nfe) {
                System.out.println("Can't enter empty string " + nfe);
            }
            catch(ArithmeticException ae) {
                System.out.println("Can't be divided by zero "+ ae);
            }
        }
        public static void main(String[] args)
        {
            SwingUtilities.invokeLater(new Runnable()
            {
                public void run()
                {
                    new app();
                }
            });
        }
    }
